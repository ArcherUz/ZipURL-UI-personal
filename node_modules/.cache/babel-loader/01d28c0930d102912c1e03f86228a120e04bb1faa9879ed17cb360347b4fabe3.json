{"ast":null,"code":"var _jsxFileName = \"C:\\\\vscode\\\\UI\\\\login-app\\\\src\\\\components\\\\UrlEncode.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UrlDecoder() {\n  _s();\n  const [shortUrlCode, setShortUrlCode] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const jwtToken = localStorage.getItem(\"jwtToken\");\n    if (!jwtToken) {\n      setErrorMessage(\"You are not authenticated. Please login first.\");\n      return;\n    }\n    try {\n      // Assuming your backend has been adjusted to return the long URL for client-side handling\n      const response = await axios.get(`http://localhost:8080/api/urls/${shortUrlCode}`, {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        }\n      });\n      // Redirecting to the decoded long URL\n      window.location.href = response.data;\n    } catch (error) {\n      setErrorMessage(error.response ? error.response.data.message : \"An error occurred. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Decode Short URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"shortUrlCode\",\n          children: \"Short URL Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"shortUrlCode\",\n          value: shortUrlCode,\n          onChange: e => setShortUrlCode(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Decode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(UrlDecoder, \"O34cdnuI6JXctBn218BbENmItFQ=\");\n_c = UrlDecoder;\nexport default UrlDecoder;\nvar _c;\n$RefreshReg$(_c, \"UrlDecoder\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UrlDecoder","_s","shortUrlCode","setShortUrlCode","errorMessage","setErrorMessage","handleSubmit","event","preventDefault","jwtToken","localStorage","getItem","response","get","headers","Authorization","window","location","href","data","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/vscode/UI/login-app/src/components/UrlEncode.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction UrlDecoder() {\r\n  const [shortUrlCode, setShortUrlCode] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const jwtToken = localStorage.getItem(\"jwtToken\");\r\n    if (!jwtToken) {\r\n      setErrorMessage(\"You are not authenticated. Please login first.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Assuming your backend has been adjusted to return the long URL for client-side handling\r\n      const response = await axios.get(\r\n        `http://localhost:8080/api/urls/${shortUrlCode}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${jwtToken}`,\r\n          },\r\n        }\r\n      );\r\n      // Redirecting to the decoded long URL\r\n      window.location.href = response.data;\r\n    } catch (error) {\r\n      setErrorMessage(\r\n        error.response\r\n          ? error.response.data.message\r\n          : \"An error occurred. Please try again later.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Decode Short URL</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"shortUrlCode\">Short URL Code</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"shortUrlCode\"\r\n            value={shortUrlCode}\r\n            onChange={(e) => setShortUrlCode(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        {errorMessage && (\r\n          <div className=\"alert alert-danger\">{errorMessage}</div>\r\n        )}\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Decode\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UrlDecoder;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMU,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,IAAI,CAACF,QAAQ,EAAE;MACbJ,eAAe,CAAC,gDAAgD,CAAC;MACjE;IACF;IAEA,IAAI;MACF;MACA,MAAMO,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAC7B,kCAAiCX,YAAa,EAAC,EAChD;QACEY,OAAO,EAAE;UACPC,aAAa,EAAG,UAASN,QAAS;QACpC;MACF,CACF,CAAC;MACD;MACAO,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGN,QAAQ,CAACO,IAAI;IACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdf,eAAe,CACbe,KAAK,CAACR,QAAQ,GACVQ,KAAK,CAACR,QAAQ,CAACO,IAAI,CAACE,OAAO,GAC3B,4CACN,CAAC;IACH;EACF,CAAC;EAED,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBxB,OAAA;MAAAwB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB5B,OAAA;MAAM6B,QAAQ,EAAEtB,YAAa;MAAAiB,QAAA,gBAC3BxB,OAAA;QAAKuB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBxB,OAAA;UAAO8B,OAAO,EAAC,cAAc;UAAAN,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpD5B,OAAA;UACE+B,IAAI,EAAC,MAAM;UACXR,SAAS,EAAC,cAAc;UACxBS,EAAE,EAAC,cAAc;UACjBC,KAAK,EAAE9B,YAAa;UACpB+B,QAAQ,EAAGC,CAAC,IAAK/B,eAAe,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACjDI,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EACLvB,YAAY,iBACXL,OAAA;QAAKuB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAEnB;MAAY;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACxD,eACD5B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAElD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC1B,EAAA,CAzDQD,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AA2DnB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}